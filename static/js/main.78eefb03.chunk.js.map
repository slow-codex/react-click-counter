{"version":3,"sources":["Components/FunctionalComp.js","Components/ClassComp.js","Components/Click.js","App.js","reportWebVitals.js","index.js"],"names":["FunctionalComp","ClassComp","React","Component","ClassComp1","Click","props","UpdateClick","setState","count","state","this","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAOeA,MAJf,WACI,OAAO,gE,4BCFEC,EAAb,4JACI,WACI,OAAO,gEAFf,GAA+BC,IAAMC,WAKxBC,EAAb,4JACI,WACI,OAAO,wEAFf,GAAgCF,IAAMC,WCcvBE,EApBf,kDACI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,YAAY,WACR,EAAKC,SAAS,CAAEC,MAAO,EAAKC,MAAMD,MAAM,KALxC,EAAKC,MAAQ,CACTD,MAAM,GAJI,EADtB,0CAWI,WACI,IAAMA,EAAOE,KAAKD,MAAZD,MACN,OACI,8BACI,yBAAQG,QAASD,KAAKJ,YAAtB,qBAA4CE,EAA5C,kBAfhB,GAA2BP,IAAMC,WCkBlBU,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78eefb03.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction FunctionalComp(){\r\n    return <p>This is a functional component</p>\r\n}\r\n\r\nexport default FunctionalComp","import React from 'react'\r\n\r\nexport class ClassComp extends React.Component{\r\n    render(){\r\n        return <p>This is the class component</p>\r\n    };\r\n}\r\nexport class ClassComp1 extends React.Component{\r\n    render(){\r\n        return <p>This is the another class component</p>\r\n    };\r\n}\r\n","import React from 'react';\r\nexport class Click extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            count:0\r\n        }\r\n    }\r\n    UpdateClick=()=>{\r\n        this.setState({ count: this.state.count+1});\r\n    };\r\n    render(){\r\n        const{count}=this.state;\r\n        return(\r\n            <div>\r\n                <button onClick={this.UpdateClick}>Clicked {count} times</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Click;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport FC from \"./Components/FunctionalComp\";\nimport {ClassComp,ClassComp1} from \"./Components/ClassComp\";\nimport Click from \"./Components/Click\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1> Hello! Welcome </h1>\n      <FC />\n      <ClassComp />\n      <ClassComp1 />\n      <Click />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}